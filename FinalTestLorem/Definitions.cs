using FinalTestLorem.BLL;
using FinalTestLorem.PageObjects;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using System;
using TechTalk.SpecFlow;

namespace FinalTestLorem
{
    [Binding]
    public class Definitions
    {
        public IWebDriver driver;
        BusinessLL bll;

        [Before]
        public void SetUp()
        {
            driver = new ChromeDriver();
            driver.Manage().Window.Maximize();
        }

            [Given(@"User opens (.*) page")]
        public void UserOpenUrlPage( string url)
        {
            bll = new BusinessLL(driver);
            bll.OpenUrlPage(url);
        }

        [When(@"User change language to ru")]
        public void WhenUserChangeLanguageToRu()
        {
            bll.ChangeLanguageToRu();
        }

        [Then(@"User checks that home page display keyword (.*)")]
        public void ThenUserChecksThatHomePageDisplayKeyword(string keyword)
        {
            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);
            Assert.IsTrue(bll.GetTextFromHomePageParagraph().Contains(keyword));
        }

        [When(@"User press in generate button")]
        public void WhenUserPressInGenerateButton()
        {
            bll.ClickOnGenereateButtonOnHomePage(); 
        }

        [Then(@"User checks that first paragraph on generate result page contains(.*)")]
        public void ThenUserChecksThatFirstParagraphOnGenerateResultPageContainsKeywords(string keywords)
        {
            Assert.IsTrue(bll.GetTextFromParagraphOnGenerateResultPage().StartsWith(keywords));
        }

        [When(@"User choose words in radio buton")]
        public void WhenUserChooseWordsInRadioButon()
        {
            bll.ClickOnRadioButtonWord();
        }

        [When(@"User put amount (.*) in input field")]
        public void WhenUserPutAmountInInputField(int amount)
        {
           bll.SetValue(amount.ToString());
        }
        [Then(@"User checks that amount of generated words are (.*)")]
        public void ThenUserChecksThatAmountOfGeneratedWordsAre(int amount)
        {
            var arrayWithWords = bll.GetTextFromParagraphOnGenerateResultPage().Split(' ');
            Assert.AreEqual(amount, arrayWithWords.Length);
        }

        [When(@"User choose bytes in radio buton")]
        public void WhenUserChooseBytesInRadioButon()
        {
           bll.ClickOnRadioButtonBytes();
        }

        [Then(@"User checks that amount of generated bytes are (.*)")]
        public void ThenUserChecksThatAmountOfGeneratedBytesAreAmount(int amount)
        {
            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(30);
            Assert.AreEqual(amount, System.Text.ASCIIEncoding.ASCII.GetByteCount(bll.GetTextFromParagraphOnGenerateResultPage()));
        }
        [When(@"User check out checkbox")]
        public void WhenUserCheckOutCheckbox()
        {
            bll.ClickOnCheckBoxOnHomePage();
        }

        [Then(@"User checks that first paragraph does not begin with (.*)")]
        public void ThenUserChecksThatFirstParagraphDoesNotBeginWithKyewords(string keywords)
        {
            Assert.IsFalse(bll.GetTextFromParagraphOnGenerateResultPage().StartsWith(keywords));
        }

        [Then(@"User checks that amount of (.*) in paragraphs from (.*) on generate result page not more that (.*)\.")]
        public void ThenUserChecksAmountOfKeywordInParagraphsOnGenerateResultPage(string keyword, string url, int amount)
        {
            int sumAllCounts = 0; //GetNumberOfKeyWordOnPage(keyword);
            for (int i = 0; i < 10; i++)
            {
                bll.OpenUrlPage(url);
                bll.ClickOnGenereateButtonOnHomePage();
              
                sumAllCounts += GetNumberOfKeyWordOnPage(keyword);
            }
            Assert.AreEqual(amount, sumAllCounts/10);
        }

        public  int GetNumberOfKeyWordOnPage(string keyword)
        {
            int count = 0;

            foreach (string paragraph in bll.GetTextFromAllParagraphsOnGenerateResultPage())
            {
                if (paragraph.Contains(keyword))
                { count++; }
            }
                       
            return count;
        }







        [After]
        public void TearDown()
        {
            driver.Quit();
        }

    }
}
